@PART[Tauruexcrementschhiker]:NEEDS[IndicatorLights] {
// Adds crew indicator and flash for crew report available


    //-------------------------------------------------------------------------
    // INDICATOR MESHES
    //-------------------------------------------------------------------------

    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = 0.37, 0.15, 1.775
	rotation = 0, 0, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = 0.37, 0.05, 1.775
	rotation = 0, 0, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = 0.37, -0.05, 1.775
	rotation = 0, 0, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = 0.37, -0.15, 1.775
	rotation = 0, 0, 0
    }
    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = -0.37, 0.15, 1.775
	rotation = 0, 0, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = -0.37, 0.05, 1.775
	rotation = 0, 0, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = -0.37, -0.05, 1.775
	rotation = 0, 0, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = -0.37, -0.15, 1.775
	rotation = 0, 0, 0
    }

    //-------------------------------------------------------------------------
    // CONTROLLABLE EMISSIVES
    //-------------------------------------------------------------------------

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:0
	emissiveName = indicator0
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:1
	emissiveName = indicator1
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:2
	emissiveName = indicator2
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:3
	emissiveName = indicator3
    }
    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:4
	emissiveName = indicator4
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:5
	emissiveName = indicator5
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:6
	emissiveName = indicator6
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:7
	emissiveName = indicator7
    }

    //-------------------------------------------------------------------------
    // CONTROLLERS
    //-------------------------------------------------------------------------

    MODULE {
	name = ModuleCrewIndicatorToggle
	toggleName = indicatorToggle
    }
	
    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController0
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController1
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController2
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController3
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController4
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController5
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController6
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController7
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability0
        experimentID = crewReport
        lowValueColor = crewController0
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }

    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability1
        experimentID = crewReport
        lowValueColor = crewController1
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }

    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability2
        experimentID = crewReport
        lowValueColor = crewController2
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }

    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability3
        experimentID = crewReport
        lowValueColor = crewController3
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }
    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability4
        experimentID = crewReport
        lowValueColor = crewController4
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }
    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability5
        experimentID = crewReport
        lowValueColor = crewController5
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }
    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability6
        experimentID = crewReport
        lowValueColor = crewController6
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }
    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability7
        experimentID = crewReport
        lowValueColor = crewController7
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator0
	dataColor = crewController0
	emptyColor = availability0
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator1
	dataColor = crewController1
	emptyColor = availability1
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator2
	dataColor = crewController2
	emptyColor = availability2
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator3
	dataColor = crewController3
	emptyColor = availability3
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator4
	dataColor = crewController4
	emptyColor = availability4
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator5
	dataColor = crewController5
	emptyColor = availability5
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator6
	dataColor = crewController6
	emptyColor = availability6
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator7
	dataColor = crewController7
	emptyColor = availability7
    }


}

@PART[TaurusScienceBay]:NEEDS[IndicatorLights] {
// add crew indicators
//	Slow blink when research is on, 
//	Fast blink for non-scientists in part


    //-------------------------------------------------------------------------
    // INDICATOR MESHES
    //-------------------------------------------------------------------------

    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = -0.37, 0.10, 1.775
	rotation = 0, 0, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = -0.37, 0.00, 1.775
	rotation = 0, 0, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/nubbinLamp
	scale = 0.7, 0.7, 0.9
	position = -0.37, -0.10, 1.775
	rotation = 0, 0, 0
    }

    //-------------------------------------------------------------------------
    // CONTROLLABLE EMISSIVES
    //-------------------------------------------------------------------------

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:0
	emissiveName = indicator0
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:1
	emissiveName = indicator1
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/nubbinLamp:2
	emissiveName = indicator2
    }

    //-------------------------------------------------------------------------
    // CONTROLLERS
    //-------------------------------------------------------------------------

    // Master switch that turns all the crew indicators on/off.
    MODULE {
	name = ModuleCrewIndicatorToggle
	toggleName = indicatorToggle
    }

    // Evaluates to true when research is happening.
    MODULE {
	name = ModuleConverterIndicator
	conve?rterName = Research
    }

    // Indicator for slot 0.
    MODULE {
	name = ModuleCrewIndicator
	controllerName = crew0
    }
    MODULE {
	name = ModuleBooleanIndicator
	emissiveName = indicator0
	input = hasCrewEffect(ScienceSkill, 0)
	activeColor = if(ModuleConverterIndicator, pulsate(crew0, 600, 0.5), crew0)
	inactiveColor = blink(dim(crew0, 0.7), 150, $Off, 650)
    }

    // Indicator for slot 1.
    MODULE {
	name = ModuleCrewIndicator
	controllerName = crew1
    }
    MODULE {
	name = ModuleBooleanIndicator
	emissiveName = indicator1
	input = hasCrewEffect(ScienceSkill, 1)
	activeColor = if(ModuleConverterIndicator, pulsate(crew1, 600, 0.5), crew1)
	inactiveColor = blink(dim(crew1, 0.7), 150, $Off, 650)
    }

    // Indicator for slot 2.
    MODULE {
	name = ModuleCrewIndicator
	controllerName = crew2
    }
    MODULE {
	name = ModuleBooleanIndicator
	emissiveName = indicator2
	input = hasCrewEffect(ScienceSkill, 2)
	activeColor = if(ModuleConverterIndicator, pulsate(crew2, 600, 0.5), crew2)
	inactiveColor = blink(dim(crew2, 0.7), 150, $Off, 650)
    }
}

@PART[TaurusHCV]:NEEDS[IndicatorLights] {
// Add crew indicator and flash for crew report available

    // We have to re-specify the model for the stock part, because this is
    // an older part that uses the "mesh =" syntax in its .cfg file instead
    // of the newer "MODEL" syntax. The "mesh =" syntax doesn't allow having
    // multiple models as part of the same part, which would prevent this mod
    // from adding meshes for the indicator lights.
    MODEL
    {
	model = SpaceTuxIndustries/RecycledParts/RSCapsuledyne/Parts/TaurusHCV/model
    }

    //-------------------------------------------------------------------------
    // INDICATOR MESHES
    //-------------------------------------------------------------------------

    MODEL {
	model = IndicatorLights/Meshes/squareLamp
	scale = 0.8, 0.4, 0.4
	position = -0.096, -0.28, 1.477	
	rotation = -30, 352.5, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/squareLamp
	scale = 0.8, 0.4, 0.4
	position = 0.0, -0.28, 1.485
	rotation = -30, 0, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/squareLamp
	scale = 0.8, 0.4, 0.4
	position = 0.096, -0.28, 1.477
	rotation = -30, 7.5, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/squareLamp
	scale = 0.8, 0.4, 0.4
	position = -0.134, -0.67, 1.712
	rotation = -30, 352.5, 0
    }
    MODEL {
	model = IndicatorLights/Meshes/squareLamp
	scale = 0.8, 0.4, 0.4
	position = -0.045, -0.67, 1.724
	rotation = -30, 352.5, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/squareLamp
	scale = 0.8, 0.4, 0.4
	position = 0.045, -0.67, 1.724
	rotation = -30, 7.5, 0
    }

    MODEL {
	model = IndicatorLights/Meshes/squareLamp
	scale = 0.8, 0.4, 0.4
	position = 0.134, -0.67, 1.712
	rotation = -30, 7.5, 0
    }

    //-------------------------------------------------------------------------
    // CONTROLLABLE EMISSIVES
    //-------------------------------------------------------------------------

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/squareLamp:0
	emissiveName = indicator0
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/squareLamp:1
	emissiveName = indicator1
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/squareLamp:2
	emissiveName = indicator2
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/squareLamp:3
	emissiveName = indicator3
    }
    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/squareLamp:4
	emissiveName = indicator4
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/squareLamp:5
	emissiveName = indicator5
    }

    MODULE {
	name = ModuleControllableEmissive
	target = IndicatorLights/Meshes/squareLamp:6
	emissiveName = indicator6
    }

    //-------------------------------------------------------------------------
    // CONTROLLERS
    //-------------------------------------------------------------------------

    MODULE {
	name = ModuleCrewIndicatorToggle
	toggleName = indicatorToggle
    }
	
    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController0
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController1
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController2
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController3
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController4
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController5
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleCrewIndicator
	controllerName = crewController6
        toggleName = indicatorToggle
    }

    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability0
        experimentID = crewReport
        lowValueColor = crewController0
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }

    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability1
        experimentID = crewReport
        lowValueColor = crewController1
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }

    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability2
        experimentID = crewReport
        lowValueColor = crewController2
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }

    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability3
        experimentID = crewReport
        lowValueColor = crewController3
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }
    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability4
        experimentID = crewReport
        lowValueColor = crewController4
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }
    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability5
        experimentID = crewReport
        lowValueColor = crewController5
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }
    MODULE {
        name = ModuleScienceAvailabilityIndicator
	controllerName = availability6
        experimentID = crewReport
        lowValueColor = crewController6
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }
    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator0
	dataColor = crewController0
	emptyColor = availability0
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator1
	dataColor = crewController1
	emptyColor = availability1
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator2
	dataColor = crewController2
	emptyColor = availability2
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator3
	dataColor = crewController3
	emptyColor = availability3
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator4
	dataColor = crewController4
	emptyColor = availability4
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator5
	dataColor = crewController5
	emptyColor = availability5
    }

    MODULE {
	name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator6
	dataColor = crewController6
	emptyColor = availability6
    }

    //-------------------------------------------------------------------------
    // TWEAKS
    //-------------------------------------------------------------------------

    // This pod uses a ModuleColorChanger to handle its cabin lights, set up
    // so that by default it takes control of *all* emissives on the part.
    // Need to tell it not to tinker with the meshes that we're adding here;
    // otherwise, the crew indicator will just turn on and off with the cabin
    // lights instead of actually working as a crew indicator.
    @MODULE[ModuleColorChanger] {
	excludedRenderer = IndicatorLights/Meshes/squareLamp(Clone)
    }
}
@PART[Size3SASBatt]:NEEDS[IndicatorLights] {
	@description ^= :(.)$:$0 Indicator lights show the reaction wheel's status.:
	
	// We have to re-specify the model for the stock part, because this is
	// an older part that uses the "mesh =" syntax in its .cfg file instead
	// of the newer "MODEL" syntax. The "mesh =" syntax doesn't allow having
	// multiple models as part of the same part, which would prevent this mod
	// from adding meshes for the indicator lights.
	MODEL
	{
		model = SpaceTuxIndustries/RecycledParts/RSCapsuledyne/Parts/SASBatt/model
	}
	

	//-------------------------------------------------------------------------
	// INDICATOR MESHES
	//-------------------------------------------------------------------------

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.8, 0.4, 1
		position = -1.326, -0.02, 1.326
		rotation = 0, -45, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.8, 0.4, 1
		position = 1.326, -0.02, -1.326
		rotation = 0, 135, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.8, 0.4, 1
		position = 1.326, -0.02, 1.326
		rotation = 0, 45, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.8, 0.4, 1
		position = -1.326, -0.02, -1.326
		rotation = 0, 225, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.8, 0.4, 1
		position = -1.326, 0.02, 1.326
		rotation = 0, -45, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.8, 0.4, 1
		position = 1.326, 0.02 -1.326
		rotation = 0, 135, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.8, 0.4, 1
		position = 1.326, 0.02 1.326
		rotation = 0, 45, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/squareLamp
		scale = 0.8, 0.4, 1.
		position = -1.326, 0.02 -1.326
		rotation = 0, 215, 0
	}


	//-------------------------------------------------------------------------
	// CONTROLLABLE EMISSIVES
	//-------------------------------------------------------------------------

	MODULE {
		name = ModuleControllableEmissive
		target = IndicatorLights/Meshes/squareLamp:0,1,2,3
		emissiveName = SASindicator
	}
	MODULE {
		name = ModuleControllableEmissive
		target = IndicatorLights/Meshes/squareLamp:4,5,6,7
		emissiveName = BATTindicator
	}
	

	//-------------------------------------------------------------------------
	// CONTROLLERS
	//-------------------------------------------------------------------------

	MODULE {
		name = ModuleReactionWheelIndicator
		emissiveName = SASindicator
	}


	MODULE {
		name = ModuleResourceLevelIndicator
	}

	MODULE {
		name = ModuleResourceEnabledIndicator
		enabledColor = ModuleResourceLevelIndicator
		disabledColor = blink(ModuleResourceLevelIndicator, 900, $Off, 300)
		emissiveName = BATTindicator
	}
}
